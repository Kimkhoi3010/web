sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.17.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR="${TRAVIS_BUILD_DIR}/odoo/local-src"
    - SONGS_DIR="${TRAVIS_BUILD_DIR}/odoo/songs"
    - COMPOSE_PROJECT_NAME=mtsmte
    - GENERATED_IMAGE="${COMPOSE_PROJECT_NAME}_odoo"
    - DOCKER_HUB_REPO="camptocamp/${GENERATED_IMAGE}""
    - RANCHER_MINION_SERVER="https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch"
    # rancher minion server token
    - secure: "H1vBor3y4mX79JgJqNuLk2NqA5FZu16lbS2TUL/YSRKN3RaZo986QMrL6OrIcNDHX0cx13A5oBoQovV6CGP/e3qqr24Keuo8seChisrraRWVjUWIizW2YBNM1NaegeJpKZSHdLo0BZdYrRN+cg1MO4HQN6ekMgwwdqQBQy851WLS9+YclpvDjTllTd4hA3x/j+wby4r+7O7lZUfjqCDA8cLGq/eqGo/EzjTTeVsbUxE3jCKB574UMmROSsCCPvh2dlq6rTLVnNexgjYpszGjw9jqKblLoocjYHLIoWtT3MVUilawilOu6JY/cFJUDwaXZHRY6LjyWBOeV/bqKh8Py80QtyUGhU4w8bON4i2x7/RuUn6wQS9O8rse5l8Uf1kRDG25P0mHK/iRwpdzmKsP9ShKy/V9BE36WDI8CWB+8RJ3+AA566wwz5yCEg14/EQ/XjVcoMSoyLugvn+DBbpRnwgiuEk/Ip+aGFD2v0AsipqTReOosdBXPtAVlLMVbk4vv/KiZz9r5X5aHaoooCZjCY+d7d3zNDtiVuTF8jtI7fPU3MFajU2y4z82guPBK9fmS7Vo7o75dr23Tx4/ZTHUIvZJbPGMhmS00cO0mBZzy7ya8gD/Y/9in+NH8C3PjJ+1+bRron3kdl9kaD0algJy2thvn60rBcy4Fbw9g0dDj5s="

before_install:
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests pyOpenSSL ndg-httpsclient pyasn1 pyyaml; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  # run tests on an empty database, which is dropped afterwards
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 odoo runtests ; fi
  # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e MARABUNTA_MODE=demo -e MARABUNTA_ALLOW_SERIE=True odoo odoo --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
