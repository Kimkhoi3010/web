-
  !python {model: ir.rule, id: product.product_pricelist_comp_rule} : |
      domain_force = "['|', ('allowed_company_ids','=',False),('allowed_company_ids','in',[user.company_id.id])]"
      self.domain_force = domain_force
-
  !python {model: ir.rule, id: product.product_pricelist_item_comp_rule} : |
      domain_force = "['|', ('pricelist_id.allowed_company_ids','=',False), ('pricelist_id.allowed_company_ids','in',[user.company_id.id])]"
      self.domain_force = domain_force
-
  !python {model: ir.rule, id: account.tax_comp_rule} : |
      self.domain_force = "['|',('company_id','=',False),('company_id','=', user.company_id.id)]"
-
  !python {model: ir.rule, id: base.res_company_rule_portal} : |
      self.perm_read = False
-
  !python {model: ir.rule, id: base.res_company_rule_employee} : |
      self.perm_read = False
-
  !python {model: ir.rule, id: base.res_company_rule_public} : |
      self.perm_read = False
-
  !python {model: ir.rule, id: base.res_company_rule_erp_manager} : |
      self.perm_read = False
-
  !python {model: ir.rule, id: base.res_partner_rule} : |
      self.write({
          'groups': [(5, 0, 0)],
          'domain_force': "[(1, '=', 1)]",
          'active': True,
      })
-
  !python {model: res.partner.title, id: base.res_partner_title_doctor} : |
      self.active = False
-
  !python {model: res.partner.title, id: base.res_partner_title_prof} : |
      self.active = False
-
  !python {model: res.partner.title, id: base.res_partner_title_miss} : |
      self.active = False
